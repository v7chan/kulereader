{
  "author": {
    "name": "Andrew Nesbitt",
    "email": "andrewnez@gmail.com",
    "url": "http://andrew.github.com"
  },
  "name": "node-sass-middleware",
  "description": "Connect middleware for node-sass",
  "version": "0.9.7",
  "scripts": {
    "test": "./node_modules/mocha/bin/mocha"
  },
  "homepage": "https://github.com/sass/node-sass-middleware",
  "keywords": [
    "sass",
    "css",
    "libsass"
  ],
  "bugs": {
    "url": "https://github.com/sass/node-sass-middleware/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/sass/node-sass-middleware/blob/master/LICENSE"
    }
  ],
  "main": "./middleware.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/sass/node-sass-middleware.git"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "dependencies": {
    "mkdirp": "^0.5.1",
    "node-sass": "^3.3.3"
  },
  "devDependencies": {
    "connect": "^3.4.0",
    "mocha": "^2.3.3",
    "should": "^7.1.1",
    "supertest": "^1.1.0"
  },
  "readme": "#node-sass-middleware\n\nConnect/Express middleware for [node-sass](https://github.com/sass/node-sass).\n\n[![Build Status](https://travis-ci.org/sass/node-sass-middleware.svg?branch=master&style=flat)](https://travis-ci.org/sass/node-sass-middleware)\n[![npm version](https://badge.fury.io/js/node-sass-middleware.svg)](http://badge.fury.io/js/node-sass-middleware)\n[![Dependency Status](https://david-dm.org/sass/node-sass-middleware.svg?theme=shields.io)](https://david-dm.org/sass/node-sass-middleware)\n[![devDependency Status](https://david-dm.org/sass/node-sass-middleware/dev-status.svg?theme=shields.io)](https://david-dm.org/sass/node-sass-middleware#info=devDependencies)\n[![Gitter chat](http://img.shields.io/badge/gitter-sass/node--sass-brightgreen.svg)](https://gitter.im/sass/node-sass)\n\n## Install\n\n    npm install node-sass-middleware\n\n## Usage\n\nRecompile `.scss` or `.sass` files automatically for connect and express based http servers.\n\n### Connect example\n\n```javascript\nvar connect = require('connect')\nvar sassMiddleware = require('node-sass-middleware')\nvar server = connect.createServer(\n  sassMiddleware({\n      /* Options */\n      src: __dirname\n    , dest: __dirname + '/public'\n    , debug: true\n    , outputStyle: 'compressed'\n    , prefix:  '/prefix'  // Where prefix is at <link rel=\"stylesheets\" href=\"prefix/style.css\"/>\n  }),\n  connect.static('/prefix', __dirname + '/public')\n);\n```\n\nThere is an example connect app here: <https://github.com/andrew/node-sass-example>\n\nHeavily inspired by <https://github.com/LearnBoost/stylus>\n\n### Express example\n\n```javascript\nvar express = require('express');\nvar sassMiddleware = require('node-sass-middleware');\nvar path = require('path');\nvar app = express();\napp.use(sassMiddleware({\n    /* Options */\n    src: __dirname,\n    dest: path.join(__dirname, 'public'),\n    debug: true,\n    outputStyle: 'compressed',\n    prefix:  '/prefix'  // Where prefix is at <link rel=\"stylesheets\" href=\"prefix/style.css\"/>\n}));\napp.use(express.static(path.join(__dirname, 'public')));\n```\n### Options\n\n *    `src`            - (String) Source directory used to find `.scss` or `.sass` files.\n *    optional configurations:\n  *    `dest`           - (String) Destination directory used to output `.css` files (when undefined defaults to `src`).\n  *    `root`           - (String) A base path for both source and destination directories.\n  *    `prefix`         - (String) It will tell the sass middleware that any request file will always be prefixed with `<prefix>` and this prefix should be ignored.\n  *    `force`          - `[true | false]`, false by default. Always re-compile.\n  *    `debug`          - `[true | false]`, false by default. Output debugging information.\n  *    `indentedSyntax` - `[true | false]`, false by default. Compiles files with the `.sass` extension instead of `.scss` in the `src` directory.\n  *    `response`       - `[true | false]`, true by default. To write output directly to response instead of to a file.\n  *    `error`          - A function to be called when something goes wrong.\n\n  For full list of options from original node-sass project go [here](https://github.com/sass/node-sass).\n\n## Testing\n\n    npm install mocha -g\n\n    mocha test\n\n## Contributors\n\nWe <3 our contributors! A special thanks to all those who have clocked in some dev time on this project, we really appreciate your hard work. You can find [a full list of those people here](https://github.com/sass/node-sass-middleware/graphs/contributors).\n\n### Note on Patches/Pull Requests\n\n * Fork the project.\n * Make your feature addition or bug fix.\n * Add documentation if necessary.\n * Add tests for it. This is important so I don't break it in a future version unintentionally.\n * Send a pull request. Bonus points for topic branches.\n\n## Copyright\n\nCopyright (c) 2013+ Andrew Nesbitt. See [LICENSE](https://github.com/sass/node-sass-middleware/blob/master/LICENSE) for details.\n",
  "readmeFilename": "README.md",
  "_id": "node-sass-middleware@0.9.7",
  "dist": {
    "shasum": "5077449e26681783ce5971729e4caf698b7948a8"
  },
  "_from": "node-sass-middleware@*",
  "_resolved": "https://registry.npmjs.org/node-sass-middleware/-/node-sass-middleware-0.9.7.tgz"
}
